services: 
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./proxy.conf.template:/etc/nginx/templates/default.conf.template:ro
    container_name: proxy
    depends_on:
      - frontend
      - backend
  backend: 
    image: node:alpine
    environment:
      PGHOST: ${PGHOST}
      PGPORT: ${PGPORT}
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      PGDATABASE: ${PGDATABASE}
      FASTIFY_SECRET: ${FASTIFY_SECRET}
      FASTIFY_LOG_LEVEL: ${FASTIFY_LOG_LEVEL}
    container_name: backend
    tty: true
    user : 1000:1000
    working_dir: /backend
    volumes:
      - ./backend:/backend
  frontend: 
    image: node:alpine
    container_name: frontend
    tty: true
    user: 1000:1000
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend
  db : 
    image: postgres:16
    container_name: db
    environment: 
      POSTGRES_USER: ${PGUSER}
      POSTGRES_PASSWORD: ${PGPASSWORD}
      POSTGRES_DB: ${PGDATABASE}
    volumes:
    - ./database/init:/docker-entrypoint-initdb.d
    #   - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: dbadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGUSER: ${PGUSER}
      PGPASSWORD: ${PGPASSWORD}
      PGDATABASE: ${PGDATABASE}
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./database/servers.json:/pgadmin4/servers.json
    depends_on:
      - db

volumes:
  # pgdata:
  pgadmin_data:
